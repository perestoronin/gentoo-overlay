From 35bb8dc24442ade219eeacd7a1f6db95545f1bbb Mon Sep 17 00:00:00 2001
From: Roel Aaij <roel.aaij@gmail.com>
Date: Fri, 23 Dec 2022 13:19:48 +0100
Subject: [PATCH] system fast float

---
 cmake/SearchForStuff.cmake | 8 --------
 common/CMakeLists.txt      | 1 -
 common/StringUtil.h        | 5 ++---
 3 files changed, 2 insertions(+), 12 deletions(-)

diff --git a/cmake/SearchForStuff.cmake b/cmake/SearchForStuff.cmake
index b8424334b..688d7bdd9 100644
--- a/cmake/SearchForStuff.cmake
+++ b/cmake/SearchForStuff.cmake
@@ -272,14 +272,6 @@ else()
 	set(BIN2CPPDEP ${CMAKE_SOURCE_DIR}/linux_various/hex2h.pl)
 endif()
 
-# rapidyaml includes fast_float as a submodule, saves us pulling it in directly.
-# Normally, we'd just pull in the cmake project, and link to it, but... it seems to enable
-# permissive mode, which breaks other parts of PCSX2. So, we'll just create a target here
-# for now.
-#add_subdirectory(3rdparty/rapidyaml/rapidyaml/ext/c4core/src/c4/ext/fast_float EXCLUDE_FROM_ALL)
-add_library(fast_float INTERFACE)
-target_include_directories(fast_float INTERFACE 3rdparty/rapidyaml/rapidyaml/ext/c4core/src/c4/ext/fast_float/include)
-
 add_subdirectory(3rdparty/jpgd EXCLUDE_FROM_ALL)
 add_subdirectory(3rdparty/simpleini EXCLUDE_FROM_ALL)
 add_subdirectory(3rdparty/imgui EXCLUDE_FROM_ALL)
diff --git a/common/CMakeLists.txt b/common/CMakeLists.txt
index 31f350f63..1d614fb9f 100644
--- a/common/CMakeLists.txt
+++ b/common/CMakeLists.txt
@@ -297,7 +297,6 @@ target_link_libraries(common PRIVATE
 
 target_link_libraries(common PUBLIC
 	fmt::fmt
-	fast_float
 )
 
 fixup_file_properties(common)
diff --git a/common/StringUtil.h b/common/StringUtil.h
index e0195b2c1..d86c190be 100644
--- a/common/StringUtil.h
+++ b/common/StringUtil.h
@@ -25,7 +25,6 @@
 #include <string_view>
 #include <vector>
 
-#include "fast_float/fast_float.h"
 
 // Older versions of libstdc++ are missing support for from_chars() with floats, and was only recently
 // merged in libc++. So, just fall back to stringstream (yuck!) on everywhere except MSVC.
@@ -113,7 +112,7 @@ namespace StringUtil
 	{
 		T value;
 
-		const fast_float::from_chars_result result = fast_float::from_chars(str.data(), str.data() + str.length(), value);
+		const std::from_chars_result result = std::from_chars(str.data(), str.data() + str.length(), value);
 		if (result.ec != std::errc())
 			return std::nullopt;
 
@@ -126,7 +125,7 @@ namespace StringUtil
 
 		const char* ptr = str.data();
 		const char* end = ptr + str.length();
-		const fast_float::from_chars_result result = fast_float::from_chars(ptr, end, value);
+		const std::from_chars_result result = std::from_chars(ptr, end, value);
 		if (result.ec != std::errc())
 			return std::nullopt;
 
-- 
2.39.0

