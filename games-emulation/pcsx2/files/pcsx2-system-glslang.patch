From 201413719ce288effb2383fa3eb6f132753311a0 Mon Sep 17 00:00:00 2001
From: Roel Aaij <roel.aaij@gmail.com>
Date: Wed, 18 Oct 2023 16:24:18 +0200
Subject: [PATCH 2/2] system glslang

---
 cmake/SearchForStuff.cmake                  | 4 ++--
 pcsx2/CMakeLists.txt                        | 2 +-
 pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp | 6 +++---
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/cmake/SearchForStuff.cmake b/cmake/SearchForStuff.cmake
index 46b634d2c..200714aee 100644
--- a/cmake/SearchForStuff.cmake
+++ b/cmake/SearchForStuff.cmake
@@ -152,8 +152,8 @@ if(USE_OPENGL)
 endif()
 
 if(USE_VULKAN)
-	add_subdirectory(3rdparty/glslang EXCLUDE_FROM_ALL)
-	add_subdirectory(3rdparty/vulkan-headers EXCLUDE_FROM_ALL)
+  find_package(glslang REQUIRED)
+  find_package(VulkanHeaders REQUIRED)
 endif()
 
 find_package(cubeb REQUIRED)
diff --git a/pcsx2/CMakeLists.txt b/pcsx2/CMakeLists.txt
index e3f763d26..2838954f8 100644
--- a/pcsx2/CMakeLists.txt
+++ b/pcsx2/CMakeLists.txt
@@ -649,7 +649,7 @@ if(USE_VULKAN)
 		GS/Renderers/Vulkan/VKStreamBuffer.h
 		GS/Renderers/Vulkan/VKSwapChain.h
 	)
-	target_link_libraries(PCSX2_FLAGS INTERFACE Vulkan-Headers glslang)
+	target_link_libraries(PCSX2_FLAGS INTERFACE Vulkan::Headers glslang::glslang glslang::glslang-default-resource-limits glslang::SPIRV)
 endif()
 
 set(pcsx2GSMetalShaders
diff --git a/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp b/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
index 9ecb06a4c..10eca34a9 100644
--- a/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
+++ b/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
@@ -30,8 +30,8 @@
 #include "common/Path.h"
 
 // glslang includes
-#include "SPIRV/GlslangToSpv.h"
-#include "StandAlone/ResourceLimits.h"
+#include "glslang/SPIRV/GlslangToSpv.h"
+#include "glslang/Public/ResourceLimits.h"
 #include "glslang/Public/ShaderLang.h"
 
 #include "fmt/format.h"
@@ -179,7 +179,7 @@ std::optional<VKShaderCache::SPIRVCodeVector> VKShaderCache::CompileShaderToSPV(
 		}
 	};
 
-	if (!shader->parse(&glslang::DefaultTBuiltInResource, default_version, profile, false, true, messages, includer))
+	if (!shader->parse(GetDefaultResources(), default_version, profile, false, true, messages, includer))
 	{
 		DumpBadShader("Failed to parse shader");
 		return std::nullopt;
-- 
2.42.0

