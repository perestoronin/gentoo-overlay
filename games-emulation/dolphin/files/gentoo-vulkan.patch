diff --git a/Source/Core/VideoBackends/Vulkan/CMakeLists.txt b/Source/Core/VideoBackends/Vulkan/CMakeLists.txt
index 87628030e9..eef5c3c450 100644
--- a/Source/Core/VideoBackends/Vulkan/CMakeLists.txt
+++ b/Source/Core/VideoBackends/Vulkan/CMakeLists.txt
@@ -39,24 +39,11 @@ add_library(videovulkan
 
 target_link_libraries(videovulkan
 PUBLIC
-  common
-  videocommon
-
-PRIVATE
-  # Link against glslang, the other necessary libraries are referenced by the executable.
-  glslang
-  xxhash
-)
-
-# Only include the Vulkan headers when building the Vulkan backend
-target_include_directories(videovulkan
-PRIVATE
-  ${CMAKE_SOURCE_DIR}/Externals/Vulkan/Include
-)
-
-# Silence warnings on glslang by flagging it as a system include
-target_include_directories(videovulkan
-SYSTEM PRIVATE
-  ${CMAKE_SOURCE_DIR}/Externals/glslang/glslang/Public
-  ${CMAKE_SOURCE_DIR}/Externals/glslang/SPIRV
-)
+    videocommon
+    common
+    glslang
+    glslang-default-resource-limits
+    SPIRV
+    HLSL
+    OGLCompiler
+    OSDependent)
diff --git a/Source/Core/VideoBackends/Vulkan/ShaderCompiler.cpp b/Source/Core/VideoBackends/Vulkan/ShaderCompiler.cpp
index fb267b9319..cea085e637 100644
--- a/Source/Core/VideoBackends/Vulkan/ShaderCompiler.cpp
+++ b/Source/Core/VideoBackends/Vulkan/ShaderCompiler.cpp
@@ -13,9 +13,9 @@
 #include <string>
 
 // glslang includes
-#include "GlslangToSpv.h"
-#include "ShaderLang.h"
-#include "disassemble.h"
+#include "glslang/SPIRV/GlslangToSpv.h"
+#include "glslang/Public/ShaderLang.h"
+#include "glslang/SPIRV/disassemble.h"
 
 #include "Common/FileUtil.h"
 #include "Common/Logging/Log.h"
@@ -344,6 +344,16 @@ const TBuiltInResource* GetCompilerResourceLimits()
                                           /* .MaxCullDistances = */ 8,
                                           /* .MaxCombinedClipAndCullDistances = */ 8,
                                           /* .MaxSamples = */ 4,
+                                          /* maxMeshOutputVerticesNV = */ 256,
+                                          /* maxMeshOutputPrimitivesNV = */ 512,
+                                          /* maxMeshWorkGroupSizeX_NV = */ 32,
+                                          /* maxMeshWorkGroupSizeY_NV = */ 1,
+                                          /* maxMeshWorkGroupSizeZ_NV = */ 1,
+                                          /* maxTaskWorkGroupSizeX_NV = */ 32,
+                                          /* maxTaskWorkGroupSizeY_NV = */ 1,
+                                          /* maxTaskWorkGroupSizeZ_NV = */ 1,
+                                          /* maxMeshViewCountNV = */ 4,
+                                          /* .maxDualSourceDrawBuffersEXT = */ 1,
                                           /* .limits = */
                                           {
                                               /* .nonInductiveForLoops = */ 1,
