--- old/cvmfs/file_processing/async_reader_impl.h	2016-05-19 19:39:59.000000000 +0200
+++ new/cvmfs/file_processing/async_reader_impl.h	2017-02-02 23:20:33.364940693 +0100
@@ -24,9 +24,8 @@
                          &Reader<FileScrubbingTaskT, FileT>::ReadThread);
 
   assert(!read_thread_.joinable());
-  read_thread_ = thread;
+  read_thread_ = std::move(thread);
   assert(read_thread_.joinable());
-  assert(!thread.joinable());
 
   // wait for the thread to call back...
   const bool successful_startup = thread_started_executing_.Get();
--- old/cvmfs/catalog_rw.h	2016-05-19 19:39:59.000000000 +0200
+++ new/cvmfs/catalog_rw.h	2017-02-02 23:27:31.218167595 +0100
@@ -94,8 +94,8 @@
   bool SetVOMSAuthz(const std::string &voms_authz);
 
  protected:
-  static const double kMaximalFreePageRatio   = 0.20;
-  static const double kMaximalRowIdWasteRatio = 0.25;
+  constexpr static double kMaximalFreePageRatio   = 0.20;
+  constexpr static double kMaximalRowIdWasteRatio = 0.25;
 
   CatalogDatabase::OpenMode DatabaseOpenMode() const {
     return CatalogDatabase::kOpenReadWrite;
--- old/cvmfs/upload_facility.cc	2016-05-19 19:39:59.000000000 +0200
+++ new/cvmfs/upload_facility.cc	2017-02-02 23:21:16.845047099 +0100
@@ -34,9 +34,8 @@
   // 'copy' the operating system thread construct. The assertions check for this
   // behaviour.
   assert(!writer_thread_.joinable());
-  writer_thread_ = thread;
+  writer_thread_ = std::move(thread);
   assert(writer_thread_.joinable());
-  assert(!thread.joinable());
 
   // wait for the thread to call back...
   return thread_started_executing_.Get();
