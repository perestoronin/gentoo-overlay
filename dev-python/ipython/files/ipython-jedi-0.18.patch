From dcd9dc90aee7e4c5c52ce44c18e7518934790612 Mon Sep 17 00:00:00 2001
From: gorogoroumaru <force.minpiku@gmail.com>
Date: Fri, 10 Apr 2020 10:24:52 +0900
Subject: [PATCH] Fix DeprecationWarning on autocompletion with jedi 0.17.0

---
 IPython/core/completer.py | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/IPython/core/completer.py b/IPython/core/completer.py
index 16fbb81f55..01730fff2d 100644
--- a/IPython/core/completer.py
+++ b/IPython/core/completer.py
@@ -110,26 +110,23 @@
 # Copyright (C) 2001 Python Software Foundation, www.python.org


-import __main__
 import builtins as builtin_mod
 import glob
-import time
 import inspect
 import itertools
 import keyword
 import os
 import re
+import string
 import sys
+import time
 import unicodedata
-import string
 import warnings
-
 from contextlib import contextmanager
 from importlib import import_module
-from typing import Iterator, List, Tuple, Iterable
 from types import SimpleNamespace
+from typing import Iterable, Iterator, List, Tuple

-from traitlets.config.configurable import Configurable
 from IPython.core.error import TryNext
 from IPython.core.inputtransformer2 import ESC_MAGIC
 from IPython.core.latex_symbols import latex_symbols, reverse_latex_symbol
@@ -137,7 +134,10 @@
 from IPython.utils import generics
 from IPython.utils.dir2 import dir2, get_real_method
 from IPython.utils.process import arg_split
-from traitlets import Bool, Enum, observe, Int
+from traitlets import Bool, Enum, Int, observe
+from traitlets.config.configurable import Configurable
+
+import __main__

 # skip module docstests
 skip_doctest = True
@@ -969,26 +969,33 @@
                          'Expected "param ...", found %r".' % description)
     return description[6:]

+
 def _make_signature(completion)-> str:
     """
     Make the signature from a jedi completion
-
-    Parameter
-    =========
-
+    Parameters
+    ----------
     completion: jedi.Completion
         object does not complete a function type
-
     Returns
-    =======
-
+    -------
     a string consisting of the function signature, with the parenthesis but
     without the function name. example:
     `(a, *args, b=1, **kwargs)`
-
     """

-    return '(%s)'% ', '.join([f for f in (_formatparamchildren(p) for p in completion.params) if f])
+    # it looks like this might work on jedi 0.17
+    if hasattr(completion, 'get_signatures'):
+        signatures = completion.get_signatures()
+        if not signatures:
+            return  '(?)'
+
+        c0 = completion.get_signatures()[0]
+        return '('+c0.to_string().split('(', maxsplit=1)[1]
+
+    return '(%s)'% ', '.join([f for f in (_formatparamchildren(p) for signature in completion.get_signatures()
+                                          for p in signature.defined_names()) if f])
+

 class IPCompleter(Completer):
     """Extension of the completer class with IPython-specific features"""
@@ -1380,8 +1380,7 @@ def _jedi_matches(self, cursor_column:int, cursor_line:int, text:str):
                 else:
                     raise ValueError("Don't understand self.omit__names == {}".format(self.omit__names))

-        interpreter = jedi.Interpreter(
-            text[:offset], namespaces, column=cursor_column, line=cursor_line + 1)
+        interpreter = jedi.Interpreter(text[:offset], namespaces)
         try_jedi = True

         try:
@@ -1397,7 +1397,7 @@
         if not try_jedi:
             return []
         try:
-            return filter(completion_filter, interpreter.completions())
+            return filter(completion_filter, interpreter.complete(column=cursor_column, line=cursor_line + 1))
         except Exception as e:
             if self.debug:
                 return [_FakeJediCompletion('Oops Jedi has crashed, please report a bug with the following:\n"""\n%s\ns"""' % (e))]
--- a/IPython/terminal/ptutils.py	2021-01-07 12:43:25.464668358 +0100
+++ b/IPython/terminal/ptutils.py	2021-01-07 12:42:01.104069052 +0100
@@ -7,5 +7,6 @@
 # Copyright (c) IPython Development Team.
 # Distributed under the terms of the Modified BSD License.

+import sys
 import unicodedata
 from wcwidth import wcwidth
