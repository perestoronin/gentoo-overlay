diff -Naur M2Crypto-0.26.4.orig/SWIG/_bio.i M2Crypto-0.26.4/SWIG/_bio.i
--- M2Crypto-0.26.4.orig/SWIG/_bio.i	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/_bio.i	2017-10-17 18:31:52.799592024 -0700
@@ -63,14 +63,14 @@
 static PyObject *_bio_err;
 
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 void pyfd_init(void);
 #endif
 
 void bio_init(PyObject *bio_err) {
     Py_INCREF(bio_err);
     _bio_err = bio_err;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
     pyfd_init();
 #endif
 }
@@ -298,7 +298,7 @@
     return BIO_should_write(a);
 }
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 /* implment custom BIO_s_pyfd */
 
 #ifdef WIN32
diff -Naur M2Crypto-0.26.4.orig/SWIG/_evp.i M2Crypto-0.26.4/SWIG/_evp.i
--- M2Crypto-0.26.4.orig/SWIG/_evp.i	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/_evp.i	2017-10-17 18:32:48.379591029 -0700
@@ -19,7 +19,7 @@
 #include <openssl/rsa.h>
 #include <openssl/opensslv.h>
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 HMAC_CTX *HMAC_CTX_new(void) {
     HMAC_CTX *ret = PyMem_Malloc(sizeof(HMAC_CTX));
diff -Naur M2Crypto-0.26.4.orig/SWIG/_lib.i M2Crypto-0.26.4/SWIG/_lib.i
--- M2Crypto-0.26.4.orig/SWIG/_lib.i	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/_lib.i	2017-10-17 18:33:13.535590578 -0700
@@ -487,7 +487,7 @@
 %inline %{
 
 void lib_init() {
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
     SSLeay_add_all_algorithms();
     ERR_load_ERR_strings();
 #endif
diff -Naur M2Crypto-0.26.4.orig/SWIG/_lib11_compat.i M2Crypto-0.26.4/SWIG/_lib11_compat.i
--- M2Crypto-0.26.4.orig/SWIG/_lib11_compat.i	2017-10-17 18:22:17.156602333 -0700
+++ M2Crypto-0.26.4/SWIG/_lib11_compat.i	2017-10-17 18:34:12.117589529 -0700
@@ -8,7 +8,7 @@
  */
 
 %{
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 #include <string.h>
 #include <openssl/engine.h>
@@ -454,5 +454,5 @@
     return 1;
 }
 
-#endif /* OPENSSL_VERSION_NUMBER */
+#endif /* OPENSSL_VERSION_NUMBER || LIBRESSL_VERSION_NUMBER */
 %}
diff -Naur M2Crypto-0.26.4.orig/SWIG/_m2crypto_wrap.c M2Crypto-0.26.4/SWIG/_m2crypto_wrap.c
--- M2Crypto-0.26.4.orig/SWIG/_m2crypto_wrap.c	2017-10-17 18:22:17.156602333 -0700
+++ M2Crypto-0.26.4/SWIG/_m2crypto_wrap.c	2017-10-17 18:40:03.847583230 -0700
@@ -3764,7 +3764,7 @@
 #include <pythread.h>
 #include <openssl/crypto.h>
 
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
 #define CRYPTO_num_locks()      (CRYPTO_NUM_LOCKS)
 static PyThread_type_lock lock_cs[CRYPTO_num_locks()];
 static long lock_count[CRYPTO_num_locks()];
@@ -3772,7 +3772,7 @@
 #endif
 
 void threading_locking_callback(int mode, int type, const char *file, int line) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
         if (mode & CRYPTO_LOCK) {
                 PyThread_acquire_lock(lock_cs[type], WAIT_LOCK);
                 lock_count[type]++;
@@ -3784,7 +3784,7 @@
 }
 
 unsigned long threading_id_callback(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     return (unsigned long)PyThread_get_thread_ident();
 #else
     return (unsigned long)0;
@@ -3793,7 +3793,7 @@
 
 
 void threading_init(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     int i;
     if (!thread_mode) {
         for (i=0; i<CRYPTO_num_locks(); i++) {
@@ -3808,7 +3808,7 @@
 }
 
 void threading_cleanup(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     int i;
     if (thread_mode) {
         CRYPTO_set_locking_callback(NULL);
@@ -3834,7 +3834,7 @@
 #include <ceval.h>
 
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 #include <string.h>
 #include <openssl/engine.h>
@@ -4745,7 +4745,7 @@
 
 
 void lib_init() {
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
     SSLeay_add_all_algorithms();
     ERR_load_ERR_strings();
 #endif
@@ -5038,14 +5038,14 @@
 static PyObject *_bio_err;
 
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 void pyfd_init(void);
 #endif
 
 void bio_init(PyObject *bio_err) {
     Py_INCREF(bio_err);
     _bio_err = bio_err;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
     pyfd_init();
 #endif
 }
@@ -5268,7 +5268,7 @@
     return BIO_should_write(a);
 }
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 /* implment custom BIO_s_pyfd */
 
 #ifdef WIN32
@@ -5749,7 +5749,7 @@
 #include <openssl/rsa.h>
 #include <openssl/opensslv.h>
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 HMAC_CTX *HMAC_CTX_new(void) {
     HMAC_CTX *ret = PyMem_Malloc(sizeof(HMAC_CTX));
diff -Naur M2Crypto-0.26.4.orig/SWIG/_ssl.i M2Crypto-0.26.4/SWIG/_ssl.i
--- M2Crypto-0.26.4.orig/SWIG/_ssl.i	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/_ssl.i	2017-10-17 18:41:25.205581773 -0700
@@ -29,7 +29,7 @@
 #endif
 %}
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100005L
+#if OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER)
 %include <openssl/safestack.h>
 #endif
 
diff -Naur M2Crypto-0.26.4.orig/SWIG/_threads.i M2Crypto-0.26.4/SWIG/_threads.i
--- M2Crypto-0.26.4.orig/SWIG/_threads.i	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/_threads.i	2017-10-17 18:42:10.303580966 -0700
@@ -5,7 +5,7 @@
 #include <pythread.h>
 #include <openssl/crypto.h>
 
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
 #define CRYPTO_num_locks()      (CRYPTO_NUM_LOCKS)
 static PyThread_type_lock lock_cs[CRYPTO_num_locks()];
 static long lock_count[CRYPTO_num_locks()];
@@ -13,7 +13,7 @@
 #endif
 
 void threading_locking_callback(int mode, int type, const char *file, int line) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
         if (mode & CRYPTO_LOCK) {
                 PyThread_acquire_lock(lock_cs[type], WAIT_LOCK);
                 lock_count[type]++;
@@ -25,7 +25,7 @@
 }
 
 unsigned long threading_id_callback(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     return (unsigned long)PyThread_get_thread_ident();
 #else
     return (unsigned long)0;
@@ -35,7 +35,7 @@
 
 %inline %{
 void threading_init(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     int i;
     if (!thread_mode) {
         for (i=0; i<CRYPTO_num_locks(); i++) {
@@ -50,7 +50,7 @@
 }
 
 void threading_cleanup(void) {
-#if defined(THREADING) && OPENSSL_VERSION_NUMBER < 0x10100000L
+#if defined(THREADING) && (OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER))
     int i;
     if (thread_mode) {
         CRYPTO_set_locking_callback(NULL);
diff -Naur M2Crypto-0.26.4.orig/SWIG/libcrypto-compat.h M2Crypto-0.26.4/SWIG/libcrypto-compat.h
--- M2Crypto-0.26.4.orig/SWIG/libcrypto-compat.h	2017-10-17 18:22:17.157602333 -0700
+++ M2Crypto-0.26.4/SWIG/libcrypto-compat.h	2017-10-17 18:42:49.654580261 -0700
@@ -1,7 +1,7 @@
 #ifndef LIBCRYPTO_COMPAT_H
 #define LIBCRYPTO_COMPAT_H
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 #include <openssl/rsa.h>
 #include <openssl/dsa.h>
