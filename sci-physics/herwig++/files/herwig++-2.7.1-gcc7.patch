--- old/Analysis/BasicConsistency.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/Analysis/BasicConsistency.cc	2017-10-26 09:40:34.575437314 +0200
@@ -94,10 +94,10 @@
 	break;
       }
       problem |= 
-	isnan(test.x()/mm) || isnan(test.y()/mm) ||
-	isnan(test.z()/mm) || isnan(test.t()/mm) ||
-	isinf(test.x()/mm) || isinf(test.y()/mm) ||
-	isinf(test.z()/mm) || isinf(test.t()/mm);
+	std::isnan(test.x()/mm) || std::isnan(test.y()/mm) ||
+	std::isnan(test.z()/mm) || std::isnan(test.t()/mm) ||
+	std::isinf(test.x()/mm) || std::isinf(test.y()/mm) ||
+	std::isinf(test.z()/mm) || std::isinf(test.t()/mm);
     }
     if(problem) {
       generator()->log() << "Problem with position of " << **it << "\n"
@@ -125,7 +125,7 @@
   Energy mag = ptotal.m();
   Energy ee  = ptotal.e();
 
-  if (isnan(mag/MeV)) {
+  if (std::isnan(mag/MeV)) {
     cerr << "\nMomentum is 'nan'; " << ptotal/MeV 
 	 << " MeV in event " << event->number() << '\n';
     generator()->log() <<"\nMomentum is 'nan'; " << ptotal/MeV 
@@ -184,7 +184,7 @@
 	test = (*it)->lifeLength();
 	break;
       }
-      problem |= isnan(test.m2()/mm/mm) || isinf(test.m2()/mm/mm);
+      problem |= std::isnan(test.m2()/mm/mm) || std::isinf(test.m2()/mm/mm);
     }
     if(problem) {
       generator()->log() << "Problem with position of " << **it << "\n"
--- old/Decay/Radiation/FFDipole.cc	2012-11-27 15:42:01.000000000 +0100
+++ new/Decay/Radiation/FFDipole.cc	2017-10-26 09:40:34.575437314 +0200
@@ -11,6 +11,7 @@
 // functions of the FFDipole class.
 //
 
+#include <cmath>
 #include "FFDipole.h"
 #include "ThePEG/PDT/EnumParticles.h"
 #include "ThePEG/EventRecord/Particle.h"
@@ -273,7 +274,7 @@
     wgt = makePhotons(-boostv,children);
 
     // Error checks
-    if ( isnan(wgt) ) {
+    if ( std::isnan(wgt) ) {
       generator()->log() << "Infinite weight for decay " 
 			 << p.PDGName() << " " 
 			 << children[0]->PDGName() 
--- old/Decay/Radiation/IFDipole.cc	2012-11-27 15:42:01.000000000 +0100
+++ new/Decay/Radiation/IFDipole.cc	2017-10-26 09:40:34.575437314 +0200
@@ -11,6 +11,7 @@
 // functions of the IFDipole class.
 //
 
+#include <cmath>
 #include "IFDipole.h"
 #include "ThePEG/PDT/EnumParticles.h"
 #include "ThePEG/EventRecord/Particle.h"
@@ -194,7 +195,7 @@
     wgt =makePhotons(boostv,children);
     ++ntry;
     // Record warnings about large and weird weights in the .log file.
-    if(wgt>_maxwgt||wgt<0.0||isnan(wgt)) {
+    if(wgt>_maxwgt||wgt<0.0||std::isnan(wgt)) {
       generator()->log() << "IFDipole.cc:\n";
       if(wgt>_maxwgt) {
 	generator()->log() << "Weight exceeds maximum for decay!\n"; 
@@ -202,7 +203,7 @@
       if(wgt<0.0) {
 	generator()->log() << "Weight is negative! \n"; 
       }
-      if(isnan(wgt)) {
+      if(std::isnan(wgt)) {
 	generator()->log() << "Weight is NAN! \n";
 	wgt = 0.;
       }
--- old/DipoleShower/DipoleShowerHandler.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/DipoleShower/DipoleShowerHandler.cc	2017-10-26 09:40:34.575437314 +0200
@@ -12,6 +12,7 @@
 //
 
 #include <config.h>
+#include <cmath>
 #include "DipoleShowerHandler.h"
 #include "ThePEG/Interface/ClassDocumentation.h"
 #include "ThePEG/Interface/Reference.h"
@@ -373,7 +374,7 @@
 						      spectator->momentum());
 
     // in very exceptional cases happening in DIS
-    if ( isnan(dScale/GeV ) )
+    if ( std::isnan(dScale/GeV ) )
       throw RedoShower();
 
     candidate.scale(dScale);
--- old/Exsample2/GeneralSampler.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/Exsample2/GeneralSampler.cc	2017-10-26 09:40:34.575437314 +0200
@@ -147,7 +147,7 @@
       throw;
     }
 
-    if ( isnan(lastSampler->lastWeight()) || isinf(lastSampler->lastWeight()) ) {
+    if ( std::isnan(lastSampler->lastWeight()) || std::isinf(lastSampler->lastWeight()) ) {
       lastSampler = samplers.upper_bound(UseRandom::rnd())->second;
       if ( ++excptTries == eventHandler()->maxLoop() )
 	break;
--- old/Exsample2/GeneralStatistics.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/Exsample2/GeneralStatistics.cc	2017-10-26 09:40:34.575437314 +0200
@@ -15,8 +15,6 @@
 
 using namespace Herwig;
 
-GeneralStatistics::~GeneralStatistics() {}
-
 void GeneralStatistics::put(PersistentOStream & os) const {
   os << theBias << theMaxWeight 
      << theMinWeight << theSumWeights
--- old/Exsample2/GeneralStatistics.h	2012-11-27 12:06:21.000000000 +0100
+++ new/Exsample2/GeneralStatistics.h	2017-10-26 09:40:34.575437314 +0200
@@ -46,7 +46,7 @@
   /**
    * The destructor.
    */
-  virtual ~GeneralStatistics();
+  virtual ~GeneralStatistics() noexcept(false) {};
   //@}
 
 public:
@@ -188,7 +188,7 @@
    * Select an event
    */
   virtual void select(double weight, bool doIntegral = true) {
-    if ( isnan(weight) || isinf(weight) ) {
+    if ( std::isnan(weight) || std::isinf(weight) ) {
       theLastWeight = weight;
       theNanPoints += 1;
       theAllPoints += 1;
@@ -217,7 +217,7 @@
    * Reject an event.
    */
   virtual void reject() {
-    if ( isnan(lastWeight()) || isinf(lastWeight()) ) {
+    if ( std::isnan(lastWeight()) || std::isinf(lastWeight()) ) {
       theNanPoints -= 1;
       theAllPoints -= 1;
       return;
--- old/Exsample2/MultiIterationStatistics.h	2012-11-27 12:06:21.000000000 +0100
+++ new/Exsample2/MultiIterationStatistics.h	2017-10-26 09:40:34.575437314 +0200
@@ -38,7 +38,7 @@
   /**
    * The destructor.
    */
-  virtual ~MultiIterationStatistics();
+  virtual ~MultiIterationStatistics() noexcept(false);
   //@}
 
 public:
--- old/MatrixElement/Matchbox/Base/MatchboxMEBase.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/MatrixElement/Matchbox/Base/MatchboxMEBase.cc	2017-10-26 09:40:34.575437314 +0200
@@ -618,8 +618,8 @@
 }
 
 void MatchboxMEBase::AccuracyHistogram::book(double a, double b) {
-  if ( isnan(a) || isnan(b) ||
-       isinf(a) || isinf(b) ) {
+  if ( std::isnan(a) || std::isnan(b) ||
+       std::isinf(a) || std::isinf(b) ) {
     ++nans;
     return;
   }
--- old/MatrixElement/Matchbox/Utility/ColourBasis.cc	2013-10-18 10:55:41.000000000 +0200
+++ new/MatrixElement/Matchbox/Utility/ColourBasis.cc	2017-10-26 09:48:39.365433738 +0200
@@ -850,7 +850,7 @@
     res += 2.*real(inner_prod(boost::numeric::ublas::conj(a->second),prod(sp,b->second)));
   }
 
-  assert(!isnan(res));
+  assert(!std::isnan(res));
 
   return res;
 
--- old/MatrixElement/Matchbox/Utility/MatchboxXCombData.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/MatrixElement/Matchbox/Utility/MatchboxXCombData.cc	2017-10-26 09:40:34.575437314 +0200
@@ -35,7 +35,7 @@
   flushCaches();
 }
 
-MatchboxXCombData::~MatchboxXCombData() {
+MatchboxXCombData::~MatchboxXCombData() noexcept(false) {
   if ( theOLPMomenta ) {
     delete[] theOLPMomenta;
     theOLPMomenta = 0;
--- old/MatrixElement/Matchbox/Utility/MatchboxXCombData.h	2013-10-16 16:11:53.000000000 +0200
+++ new/MatrixElement/Matchbox/Utility/MatchboxXCombData.h	2017-10-26 09:40:34.575437314 +0200
@@ -87,7 +87,7 @@
     /**
      * Destructor.
      */
-    virtual ~MatchboxXCombData();
+    virtual ~MatchboxXCombData() noexcept(false);
 
     //@}
 
--- old/MatrixElement/Powheg/MEPP2VVPowheg.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/MatrixElement/Powheg/MEPP2VVPowheg.cc	2017-10-26 09:40:34.575437314 +0200
@@ -653,7 +653,7 @@
   // If restricting to qg, gqb channels then subtract the LO contribution:
   if(channels_==2) wgt -= 1.;
 
-  if(isnan(wgt)||isinf(wgt)) {
+  if(std::isnan(wgt)||std::isinf(wgt)) {
     cout << "MEPP2VVPowheg:: NLO weight " 
 	 << "is bad: wgt = " << wgt << endl;
     cout << "MEPP2VVPowheg sanityCheck invoked!" << endl;
@@ -5172,7 +5172,7 @@
   Energy m4(children_[1]->data().constituentMass());
   Energy p34(triangleFn(sqr(m1),sqr(m3),sqr(m4))
 	     /2./m1);
-  if(isnan(p34/GeV)||cth>1.||cth<-1.) return false;
+  if(std::isnan(p34/GeV)||cth>1.||cth<-1.) return false;
   Energy pT34(p34*sqrt(1.-cth)*sqrt(1.+cth));
   Lorentz5Momentum k3(pT34*sin(phi),pT34*cos(phi),p34 *cth,
 		      sqrt(p34*p34+sqr(m3)),m3);
@@ -5193,7 +5193,7 @@
   Energy m6(children_[3]->data().constituentMass());
   Energy p56(triangleFn(sqr(m2),sqr(m5),sqr(m6))
 	     /2./m2);
-  if(isnan(p56/GeV)||cth>1.||cth<-1.) return false;
+  if(std::isnan(p56/GeV)||cth>1.||cth<-1.) return false;
   Energy pT56(p56*sqrt(1.-cth)*sqrt(1.+cth));
   Lorentz5Momentum k5(pT56*sin(phi),pT56*cos(phi),p56*cth,
 		      sqrt(p56*p56+sqr(m5)),m5);
--- old/MatrixElement/Powheg/MEPP2WHPowheg.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/MatrixElement/Powheg/MEPP2WHPowheg.cc	2017-10-26 09:40:34.575437314 +0200
@@ -217,7 +217,7 @@
   //  if(_xt<1.-_eps)
   //    wgt += _a*(1./pow(1.-_xt,_p)-(1.-pow(_eps,1.-_p))/(1.-_p)/(1.-_eps));
   // return the answer
-  assert(!isinf(wgt)&&!isnan(wgt));
+  assert(!std::isinf(wgt)&&!std::isnan(wgt));
   return _contrib==1 ? max(0.,wgt) : max(0.,-wgt);
 }
 
--- old/MatrixElement/Powheg/MEPP2ZHPowheg.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/MatrixElement/Powheg/MEPP2ZHPowheg.cc	2017-10-26 09:40:34.575437314 +0200
@@ -217,7 +217,7 @@
   //  if(_xt<1.-_eps)
   //    wgt += _a*(1./pow(1.-_xt,_p)-(1.-pow(_eps,1.-_p))/(1.-_p)/(1.-_eps));
   // return the answer
-  assert(!isinf(wgt)&&!isnan(wgt));
+  assert(!std::isinf(wgt)&&!std::isnan(wgt));
   return _contrib==1 ? max(0.,wgt) : max(0.,-wgt);
 }
 
--- old/MatrixElement/Powheg/MEqq2W2ffPowheg.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/MatrixElement/Powheg/MEqq2W2ffPowheg.cc	2017-10-26 09:40:34.575437314 +0200
@@ -218,7 +218,7 @@
   if(_xt<1.-_eps)
     wgt += _a*(1./pow(1.-_xt,_p)-(1.-pow(_eps,1.-_p))/(1.-_p)/(1.-_eps));
   // return the answer
-  assert(!isinf(wgt)&&!isnan(wgt));
+  assert(!std::isinf(wgt)&&!std::isnan(wgt));
   return _contrib==1 ? max(0.,wgt) : max(0.,-wgt);
 }
 
--- old/MatrixElement/Powheg/MEqq2gZ2ffPowheg.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/MatrixElement/Powheg/MEqq2gZ2ffPowheg.cc	2017-10-26 09:40:34.575437314 +0200
@@ -22,6 +22,7 @@
 #include "Herwig++/Models/StandardModel/StandardModel.h"
 #include "ThePEG/Repository/EventGenerator.h"
 #include "Herwig++/Utilities/Maths.h"
+#include <cmath>
 
 using namespace Herwig;
 using Herwig::Math::ReLi2;
@@ -220,7 +221,7 @@
   //trick to try and reduce neg wgt contribution
   if(_xt<1.-_eps)
     wgt += _a*(1./pow(1.-_xt,_p)-(1.-pow(_eps,1.-_p))/(1.-_p)/(1.-_eps));
-  assert(!isinf(wgt)&&!isnan(wgt));
+  assert(!std::isinf(wgt)&&!std::isnan(wgt));
   // return the answer
   return _contrib==1 ? max(0.,wgt) : max(0.,-wgt);
 }
--- old/PDF/MRST.cc	2013-10-16 16:11:53.000000000 +0200
+++ new/PDF/MRST.cc	2017-10-26 09:40:34.575437314 +0200
@@ -19,6 +19,7 @@
 #include <iostream>
 #include <sstream>
 #include <string>
+#include <cmath>
 
 using namespace ThePEG;
 using namespace Herwig;
@@ -111,7 +112,7 @@
 
 double MRST::pdfValue(double x, Energy2 q2, 
 		      tcPDPtr particle, tcPDPtr parton, PDFType type) const {
-  assert(!isnan(x) && !isinf(x));
+  assert(!std::isnan(x) && !std::isinf(x));
   // reset x  to min or max if outside range
   if(x<xmin)      x=xmin;
   else if(x>xmax) x=xmax;
@@ -343,7 +344,7 @@
     }
   }
   output = max(output,0.);
-  assert(!isnan(output));
+  assert(!std::isnan(output));
   return output;
 }
 
--- old/PDT/WidthCalculatorBase.cc	2012-05-28 17:39:38.000000000 +0200
+++ new/PDT/WidthCalculatorBase.cc	2017-10-26 09:40:34.575437314 +0200
@@ -17,7 +17,7 @@
 namespace Herwig {
 using namespace ThePEG;
 
-WidthCalculatorBase::~WidthCalculatorBase() {
+  WidthCalculatorBase::~WidthCalculatorBase() noexcept(false) {
 }
 
 }
--- old/PDT/WidthCalculatorBase.h	2012-05-28 17:39:38.000000000 +0200
+++ new/PDT/WidthCalculatorBase.h	2017-10-26 09:40:34.575437314 +0200
@@ -33,7 +33,7 @@
   /**
    *  Destructor
    */
-  virtual ~WidthCalculatorBase();
+  virtual ~WidthCalculatorBase() noexcept(false);
 
   /**
    * Calculate the partial width. This must be implemented in classes inheriting from
--- old/Shower/Default/QTildeReconstructor.cc	2014-07-04 16:08:29.000000000 +0200
+++ new/Shower/Default/QTildeReconstructor.cc	2017-10-26 09:40:34.575437314 +0200
@@ -28,6 +28,7 @@
 #include "ThePEG/EventRecord/ColourLine.h"
 #include "ThePEG/Utilities/DescribeClass.h"
 #include <cassert>
+#include <cmath>
 
 using namespace Herwig;
 
@@ -1099,7 +1100,7 @@
     }
     while(ntry<100);
   }
-  if(isnan(lambda))
+  if(std::isnan(lambda))
     throw Exception() << "Rescaling factor is nan in  QTildeReconstructor::"
 		      << "inverseRescalingFactor " 
 		      << Exception::eventerror;
--- old/Shower/Default/QTildeShowerKinematics1to2.cc	2012-11-27 12:06:21.000000000 +0100
+++ new/Shower/Default/QTildeShowerKinematics1to2.cc	2017-10-26 09:40:34.575437314 +0200
@@ -13,6 +13,7 @@
 
 #include "QTildeShowerKinematics1to2.h"
 #include "ThePEG/Interface/ClassDocumentation.h"
+#include <cmath>
 
 using namespace Herwig;
 
@@ -32,7 +33,7 @@
 Lorentz5Momentum QTildeShowerKinematics1to2::
 sudakov2Momentum(double alpha, double beta, Energy px, 
 		 Energy py,unsigned int iopt) const {
-  if(isnan(beta)||isinf(beta)) 
+  if(std::isnan(beta)||std::isinf(beta)) 
     throw Exception() << "beta infinite in "
 		      << "QTildeShowerKinematics1to2::sudakov2Momentum()"
 		      << Exception::eventerror;
--- old/Utilities/Histogram.h	2012-11-27 12:06:21.000000000 +0100
+++ new/Utilities/Histogram.h	2017-10-26 09:40:34.575437314 +0200
@@ -15,6 +15,7 @@
 #include "ThePEG/Interface/Interfaced.h"
 #include "Statistic.h"
 #include <string>
+#include <cmath>
 
 namespace Herwig {
 
@@ -111,7 +112,7 @@
    *  Function to add a weighted point to the histogram
    */
   void addWeighted(double input, double weight) {
-    if(isnan(input)) return;
+	if(std::isnan(input)) return;
     unsigned int ibin;
     for(ibin=1; ibin<_bins.size(); ++ibin) {
       if(input<_bins[ibin].limit)
