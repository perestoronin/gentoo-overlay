--- a/CMakeLists.txt	2023-08-09 00:28:22.000000000 +0200
+++ b/CMakeLists.txt	2023-10-20 14:35:33.501217233 +0200
@@ -51,12 +51,6 @@
     message(INFO " ROCM_SOURCE_DIR = ${ROCM_SOURCE_DIR}")
 endif()
 
-# Set LIBKINETO_NOCUPTI to explicitly disable CUPTI
-# Otherwise, CUPTI is disabled if not found
-IF (NOT CUDA_SOURCE_DIR OR NOT CUPTI_INCLUDE_DIR OR NOT CUDA_cupti_LIBRARY)
-    set(LIBKINETO_NOCUPTI ON CACHE BOOL "" FORCE)
-endif()
-
 IF (NOT ROCM_SOURCE_DIR AND NOT ROCTRACER_INCLUDE_DIR)
     set(LIBKINETO_NOROCTRACER ON CACHE BOOL "" FORCE)
 endif()
@@ -86,7 +80,8 @@
       CXX_STANDARD_REQUIRED YES
       CXX_EXTENSIONS NO)
 
-set(KINETO_COMPILE_OPTIONS "-DKINETO_NAMESPACE=libkineto")
+set(KINETO_COMPILE_OPTIONS "-DKINETO_NAMESPACE=libkineto"
+        ${CMAKE_SHARED_LIBRARY_C_FLAGS})
 list(APPEND KINETO_COMPILE_OPTIONS "-DFMT_HEADER_ONLY")
 list(APPEND KINETO_COMPILE_OPTIONS "-DENABLE_IPC_FABRIC")
 if(NOT MSVC)
@@ -111,7 +106,7 @@
 target_compile_options(kineto_base PRIVATE "${KINETO_COMPILE_OPTIONS}")
 target_compile_options(kineto_api PRIVATE "${KINETO_COMPILE_OPTIONS}")
 
-if(NOT TARGET fmt)
+if(FALSE)
   if(NOT FMT_SOURCE_DIR)
     set(FMT_SOURCE_DIR "${LIBKINETO_THIRDPARTY_DIR}/fmt"
       CACHE STRING "fmt source directory from submodules")
@@ -129,9 +124,7 @@
   set(BUILD_SHARED_LIBS ${TEMP_BUILD_SHARED_LIBS} CACHE BOOL "Build shared libs" FORCE)
 endif()
 
-set(FMT_INCLUDE_DIR "${FMT_SOURCE_DIR}/include")
 message(STATUS "Kineto: FMT_SOURCE_DIR = ${FMT_SOURCE_DIR}")
-message(STATUS "Kineto: FMT_INCLUDE_DIR = ${FMT_INCLUDE_DIR}")
 if (NOT CUPTI_INCLUDE_DIR)
     set(CUPTI_INCLUDE_DIR "${CUDA_SOURCE_DIR}/extras/CUPTI/include")
 endif()
@@ -145,22 +138,12 @@
     set(ROCM_INCLUDE_DIRS "${ROCM_SOURCE_DIR}/include")
 endif()
 
-set(DYNOLOG_INCLUDE_DIR "${LIBKINETO_THIRDPARTY_DIR}/dynolog/")
-set(IPCFABRIC_INCLUDE_DIR "${DYNOLOG_INCLUDE_DIR}/dynolog/src/ipcfabric/")
-
 message(INFO " CUPTI_INCLUDE_DIR = ${CUPTI_INCLUDE_DIR}")
 message(INFO " ROCTRACER_INCLUDE_DIR = ${ROCTRACER_INCLUDE_DIR}")
-message(INFO " DYNOLOG_INCLUDE_DIR = ${DYNOLOG_INCLUDE_DIR}")
-message(INFO " IPCFABRIC_INCLUDE_DIR = ${IPCFABRIC_INCLUDE_DIR}")
-
-add_subdirectory("${IPCFABRIC_INCLUDE_DIR}")
-target_link_libraries(kineto_base PRIVATE dynolog_ipcfabric_lib)
 
 target_include_directories(kineto_base PUBLIC
       $<BUILD_INTERFACE:${LIBKINETO_INCLUDE_DIR}>
       $<BUILD_INTERFACE:${LIBKINETO_SOURCE_DIR}>
-      $<BUILD_INTERFACE:${DYNOLOG_INCLUDE_DIR}>
-      $<BUILD_INTERFACE:${FMT_INCLUDE_DIR}>
       $<BUILD_INTERFACE:${IPCFABRIC_INCLUDE_DIR}>
       $<BUILD_INTERFACE:${CUPTI_INCLUDE_DIR}>
       $<BUILD_INTERFACE:${CUDA_INCLUDE_DIRS}>
@@ -168,7 +151,6 @@
       $<BUILD_INTERFACE:${ROCM_INCLUDE_DIRS}>)
 
 target_include_directories(kineto_api PUBLIC
-      $<BUILD_INTERFACE:${FMT_INCLUDE_DIR}>
       $<BUILD_INTERFACE:${LIBKINETO_INCLUDE_DIR}>)
 
 if(KINETO_LIBRARY_TYPE STREQUAL "default")
@@ -202,8 +184,6 @@
 if(CUDA_nvperf_host_LIBRARY)
   target_link_libraries(kineto "${CUDA_nvperf_host_LIBRARY}")
 endif()
-target_link_libraries(kineto $<BUILD_INTERFACE:fmt::fmt-header-only>)
-add_dependencies(kineto fmt::fmt-header-only)
 
 install(TARGETS kineto EXPORT kinetoLibraryConfig
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
--- a/src/init.cpp	2023-08-09 00:28:22.000000000 +0200
+++ b/src/init.cpp	2023-10-20 14:37:39.781393610 +0200
@@ -13,7 +13,6 @@
 // @lint-ignore-every CLANGTIDY facebook-hte-RelativeInclude
 #include "ActivityProfilerProxy.h"
 #include "Config.h"
-#include "DaemonConfigLoader.h"
 #ifdef HAS_CUPTI
 #include "CuptiCallbackApi.h"
 #include "CuptiActivityApi.h"
@@ -115,14 +114,6 @@
     SET_LOG_SEVERITY_LEVEL(atoi(logLevelEnv));
   }
 
-  // Factory to connect to open source daemon if present
-#if __linux__
-  if (getenv(kUseDaemonEnvVar) != nullptr) {
-    LOG(INFO) << "Registering daemon config loader";
-    DaemonConfigLoader::registerFactory();
-  }
-#endif
-
 #ifdef HAS_CUPTI
   if (!cpuOnly) {
     // libcupti will be lazily loaded on this call.
--- a/libkineto_defs.bzl	2023-08-09 00:28:22.000000000 +0200
+++ b/libkineto_defs.bzl	2023-10-20 14:44:08.481936512 +0200
@@ -45,16 +45,15 @@
         "src/Config.cpp",
         "src/ConfigLoader.cpp",
         "src/CuptiActivityApi.cpp",
-        "src/DaemonConfigLoader.cpp",
         "src/Demangle.cpp",
         "src/GenericTraceActivity.cpp",
         "src/ILoggerObserver.cpp",
-        "src/IpcFabricConfigClient.cpp",
         "src/Logger.cpp",
         "src/LoggingAPI.cpp",
         "src/init.cpp",
         "src/output_csv.cpp",
         "src/output_json.cpp",
+        "src/ILoggerObserver.cpp",
     ] + (get_libkineto_api_srcs() if with_api else [])
 
 def get_libkineto_public_headers():
