diff --git a/caffe2/CMakeLists.txt b/caffe2/CMakeLists.txt
index bd7ab92c48..4da934f894 100644
--- a/caffe2/CMakeLists.txt
+++ b/caffe2/CMakeLists.txt
@@ -768,6 +768,8 @@ endif()
   target_include_directories(torch_cpu PRIVATE
     ${TORCH_ROOT}/third_party/miniz-2.0.8)

+  target_include_directories(torch_cpu PRIVATE
+    ${TORCH_ROOT}/third_party/neon2sse)

   install(DIRECTORY "${TORCH_SRC_DIR}/csrc"
     DESTINATION ${TORCH_INSTALL_INCLUDE_DIR}/torch
@@ -1215,6 +1217,7 @@ if(BUILD_TEST)
     target_include_directories(${test_name} PRIVATE $<INSTALL_INTERFACE:include>)
     target_include_directories(${test_name} PRIVATE $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include>)
     target_include_directories(${test_name} PRIVATE ${Caffe2_CPU_INCLUDE})
+    target_include_directories(${test_name} PRIVATE $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include>)
     add_test(NAME ${test_name} COMMAND $<TARGET_FILE:${test_name}>)
     if(INSTALL_TEST)
       install(TARGETS ${test_name} DESTINATION test)
@@ -1373,7 +1376,11 @@ if(BUILD_PYTHON)
   if(MSVC AND BUILD_SHARED_LIBS)
     install(FILES $<TARGET_PDB_FILE:caffe2_pybind11_state> DESTINATION "${PYTHON_LIB_REL_PATH}/caffe2/python" OPTIONAL)
   endif()
-  set_target_properties(caffe2_pybind11_state PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+  if (NOT BUILDING_SYSTEM_WIDE)
+    set_target_properties(caffe2_pybind11_state PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+else()
+    set_target_properties(caffe2_pybind11_state PROPERTIES SKIP_BUILD_RPATH ON)
+  endif()

   if(USE_CUDA)
     add_library(caffe2_pybind11_state_gpu MODULE ${Caffe2_GPU_PYTHON_SRCS})
@@ -1399,7 +1406,11 @@ if(BUILD_PYTHON)
     if(MSVC AND BUILD_SHARED_LIBS)
       install(FILES $<TARGET_PDB_FILE:caffe2_pybind11_state_gpu> DESTINATION "${PYTHON_LIB_REL_PATH}/caffe2/python" OPTIONAL)
     endif()
-    set_target_properties(caffe2_pybind11_state_gpu PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+    if (NOT BUILDING_SYSTEM_WIDE)
+      set_target_properties(caffe2_pybind11_state_gpu PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+    else()
+      set_target_properties(caffe2_pybind11_state_gpu PROPERTIES SKIP_BUILD_RPATH ON)
+    endif()
   endif()

   if(USE_ROCM)
@@ -1422,7 +1433,11 @@ if(BUILD_PYTHON)
         caffe2_pybind11_state_hip PROPERTIES LIBRARY_OUTPUT_DIRECTORY
         ${CMAKE_BINARY_DIR}/caffe2/python)
     install(TARGETS caffe2_pybind11_state_hip DESTINATION "${PYTHON_LIB_REL_PATH}/caffe2/python")
-    set_target_properties(caffe2_pybind11_state_hip PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+    if (NOT BUILDING_SYSTEM_WIDE)
+      set_target_properties(caffe2_pybind11_state_hip PROPERTIES INSTALL_RPATH "${caffe2_pybind11_rpath}")
+  else()
+      set_target_properties(caffe2_pybind11_state_hip PROPERTIES SKIP_BUILD_RPATH ON)
+    endif()
   endif()

   if(MSVC AND CMAKE_GENERATOR MATCHES "Visual Studio")
diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index 6516ef4cf5..45dbbaa7a4 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -955,15 +955,11 @@ if(BUILD_PYTHON)
 endif()

 # ---[ pybind11
-if(NOT ${pybind11_PREFER_third_party})
-  find_package(pybind11 CONFIG)
-  if(NOT pybind11_FOUND)
-    find_package(pybind11)
-  endif()
-endif()
+set(pybind11_FOUND TRUE)

 if(pybind11_FOUND)
     message(STATUS "System pybind11 found")
+	set(pybind11_INCLUDE_DIRS ${PYTHON_INCLUDE_DIR})
 else()
     message(STATUS "Using third_party/pybind11.")
     set(pybind11_INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR}/../third_party/pybind11/include)
diff --git a/cmake/TorchConfig.cmake.in b/cmake/TorchConfig.cmake.in
index 2c3b75941a..d9060e456d 100644
--- a/cmake/TorchConfig.cmake.in
+++ b/cmake/TorchConfig.cmake.in
@@ -28,11 +28,13 @@ endif()
 if(EXISTS "${TORCH_INSTALL_PREFIX}/include")
   set(TORCH_INCLUDE_DIRS
     ${TORCH_INSTALL_PREFIX}/include
-    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include)
+    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include
+    @pybind11_INCLUDE_DIRS@)
 else()
   set(TORCH_INCLUDE_DIRS
     ${TORCH_INSTALL_PREFIX}/include
-    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include)
+    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include
+    @pybind11_INCLUDE_DIRS@)
 endif()

 # Library dependencies.
diff --git a/setup.py b/setup.py
index 5b50074f14..23a38b9172 100644
--- a/setup.py
+++ b/setup.py
@@ -295,7 +295,6 @@ def build_deps():
             sys.exit(1)

     check_file(os.path.join(third_party_path, "gloo", "CMakeLists.txt"))
-    check_file(os.path.join(third_party_path, "pybind11", "CMakeLists.txt"))
     check_file(os.path.join(third_party_path, 'cpuinfo', 'CMakeLists.txt'))
     check_file(os.path.join(third_party_path, 'tbb', 'Makefile'))
     check_file(os.path.join(third_party_path, 'onnx', 'CMakeLists.txt'))
@@ -850,8 +849,6 @@ if __name__ == '__main__':
                 'include/torch/csrc/jit/testing/*.h',
                 'include/torch/csrc/onnx/*.h',
                 'include/torch/csrc/utils/*.h',
-                'include/pybind11/*.h',
-                'include/pybind11/detail/*.h',
                 'include/TH/*.h*',
                 'include/TH/generic/*.h*',
                 'include/THC/*.cuh',
--
diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index c53c0cf26a..db2d569511 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -958,15 +958,11 @@ if(BUILD_PYTHON)
 endif()

 # ---[ pybind11
-if(NOT ${pybind11_PREFER_third_party})
-  find_package(pybind11 CONFIG)
-  if(NOT pybind11_FOUND)
-    find_package(pybind11)
-  endif()
-endif()
+set(pybind11_FOUND TRUE)

 if(pybind11_FOUND)
     message(STATUS "System pybind11 found")
+	set(pybind11_INCLUDE_DIRS ${PYTHON_INCLUDE_DIR})
 else()
     message(STATUS "Using third_party/pybind11.")
     set(pybind11_INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR}/../third_party/pybind11/include)
diff --git a/cmake/TorchConfig.cmake.in b/cmake/TorchConfig.cmake.in
index 490104b5f0..4817317b68 100644
--- a/cmake/TorchConfig.cmake.in
+++ b/cmake/TorchConfig.cmake.in
@@ -28,11 +28,13 @@ endif()
 if(EXISTS "${TORCH_INSTALL_PREFIX}/include")
   set(TORCH_INCLUDE_DIRS
     ${TORCH_INSTALL_PREFIX}/include
-    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include)
+    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include
+    @pybind11_INCLUDE_DIRS@)
 else()
   set(TORCH_INCLUDE_DIRS
     ${TORCH_INSTALL_PREFIX}/include
-    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include)
+    ${TORCH_INSTALL_PREFIX}/include/torch/csrc/api/include
+    @pybind11_INCLUDE_DIRS@)
 endif()

 # Library dependencies.
