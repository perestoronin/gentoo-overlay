respect the active archiver tool instead of using `ar` all the time.
same for `ranlib`.

also add support for BUILD_STATIC bool for controlling the libserf.a.

--- a/SConstruct	2017-04-18 22:20:18.000000000 +0200
+++ b/SConstruct	2017-08-02 16:52:18.749838381 +0200
@@ -115,6 +115,9 @@
   BoolVariable('DISABLE_LOGGING',
                "Disable the logging framework at compile time",
                False),
+  RawListVariable('AR', "Command name or path of the archiver", None),
+  RawListVariable('RANLIB', "Command name or path of the archiver indexer", None),
+  BoolVariable('BUILD_STATIC', 'Build libserf static library', True),
   RawListVariable('CC', "Command name or path of the C compiler", None),
   RawListVariable('CFLAGS', "Extra flags for the C compiler (space-separated)",
                   None),
@@ -214,6 +217,7 @@
 
 debug = env.get('DEBUG', None)
 aprstatic = env.get('APR_STATIC', None)
+build_static = env.get('BUILD_STATIC', True)
 disablelogging = env.get('DISABLE_LOGGING', None)
 
 Help(opts.GenerateHelpText(env))
@@ -505,7 +509,9 @@
                                                           brotli_libs),
                            })
 
-env.Default(lib_static, lib_shared, pkgconfig)
+env.Default(lib_shared, pkgconfig)
+if build_static:
+  env.Default(lib_static)
 
 if CALLOUT_OKAY:
   conf = Configure(env)
@@ -537,8 +543,10 @@
                                      % (target_install_shared_path,
                                         install_shared_path)))
 
-env.Alias('install-lib', [install_static, install_shared,
-                          ])
+install_libs = [install_shared]
+if build_static:
+  install_libs.append(install_static)
+env.Alias('install-lib', install_libs)
 env.Alias('install-inc', env.Install(incdir, HEADER_FILES))
 env.Alias('install-pc', env.Install(os.path.join(libdir, 'pkgconfig'),
                                     pkgconfig))
